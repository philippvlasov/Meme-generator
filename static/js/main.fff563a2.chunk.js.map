{"version":3,"sources":["components/header.js","components/formComponent.js","components/memeComponent.js","components/memGenerator.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","src","alt","Form","props","onSubmit","handleSubmit","type","name","placeholder","value","topText","onChange","handleChange","bottomText","onClick","saveImage","Meme","id","style","fontSize","randomImage","MemGenerator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","allMemImages","bind","assertThisInitialized","_this2","fetch","then","response","json","setState","data","memes","event","_event$target","target","defineProperty","preventDefault","imgNumber","Math","floor","random","url","domtoimage","toJpeg","document","getElementById","quality","dataUrl","link","download","href","click","memeComponent","assign","formComponent","React","Component","App","header","memGenerator","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.fff563a2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"header\">\r\n                <img src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface-PNG-Image.png\" alt=\"troll_face\"/>\r\n                <h2>This is meme generator</h2>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction Form(props) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <input\r\n                className=\"form-control mt-1\"\r\n                type=\"text\"\r\n                name=\"topText\"\r\n                placeholder=\"Enter top text\"\r\n                value={props.topText}\r\n                onChange={props.handleChange}\r\n            />\r\n            <input\r\n                className=\"form-control mt-1\"\r\n                type=\"text\"\r\n                name=\"bottomText\"\r\n                placeholder=\"Enter bottom text\"\r\n                value={props.bottomText}\r\n                onChange={props.handleChange}\r\n            />\r\n            <button className=\"btn-primary mt-2\" onClick={props.handleChange}>Randomize image</button>\r\n            <br/>\r\n            <button className=\"btn-primary mt-2\" onClick={props.saveImage}>Save image</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\nfunction Meme(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"memContent\" id=\"my-node\">\r\n                <h2 style={{fontSize: props.fontSize+\"px\"}} className=\"topText\">{props.topText}</h2>\r\n                <img src={props.randomImage} alt=\"mem_image\"/>\r\n                <h2 style={{fontSize: props.fontSize+\"px\"}} className=\"bottomText\">{props.bottomText}</h2>\r\n            </div>\r\n            <div className=\"form-group mb-0 mt-3\">\r\n                <p className=\"d-inline\">Font size in px:</p>\r\n                <input\r\n                    className=\"ml-2\"\r\n                    name=\"fontSize\"\r\n                    type=\"number\"\r\n                    value={props.fontSize}\r\n                    onChange={props.handleChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Meme","import React from 'react'\r\nimport domtoimage from 'dom-to-image'\r\nimport Form from './formComponent'\r\nimport Meme from './memeComponent'\r\n\r\nclass MemGenerator extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            topText: 'enter top text here',\r\n            bottomText: 'and bottom text here',\r\n            randomImage: 'https://i.imgflip.com/1bij.jpg',\r\n            allMemImages: [],\r\n            fontSize: 60\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://api.imgflip.com/get_memes')\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                this.setState({\r\n                    allMemImages: response.data.memes\r\n                })\r\n            })\r\n    }\r\n\r\n    handleChange(event) {\r\n        let {name, value} = event.target\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        let imgNumber = Math.floor(Math.random() * 100)\r\n        this.setState({\r\n            randomImage: this.state.allMemImages[imgNumber].url\r\n        })\r\n    }\r\n\r\n    saveImage(event) {\r\n        event.preventDefault()\r\n        domtoimage.toJpeg(document.getElementById('my-node'), {quality: 0.95})\r\n            .then(function (dataUrl) {\r\n                var link = document.createElement('a');\r\n                link.download = 'my-image-name.jpeg';\r\n                link.href = dataUrl;\r\n                link.click()\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Meme\r\n                    handleChange={this.handleChange}\r\n                    {...this.state}\r\n                />\r\n                <Form\r\n                    handleSubmit={this.handleSubmit}\r\n                    handleChange={this.handleChange}\r\n                    saveImage={this.saveImage}\r\n                    {...this.state}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemGenerator","import React from 'react'\nimport Header from './components/header'\nimport MemGenerator from './components/memGenerator'\n\nfunction App() {\n    return (\n        <div>\n          <Header />\n          <MemGenerator />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}